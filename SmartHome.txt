# El registro de usuarios corresponde a un diccionario que contiene el nombre de los usuarios registrados y los valores asociados a cada usuario, un segundo diccionario con el correo electrónico y el pin de acceso.

## Definir los componentes del los diccionarios (inicialmente vacíos)
usuariosRegistrados = {}
habitacionesUsuarios = {}

# Primera opción del software:
## Extraer la información de un usuario existente
def usuarioExistente():
    global usuariosRegistrados
    usuarioNombre = input("\n Introduzca su nombre de usuario: ")
    if usuarioNombre in usuariosRegistrados.keys():       
        # Verificación del usuario
        pin = input("Introduzca su pin: ")
        if usuariosRegistrados[usuarioNombre]['pin'] == int(pin):
            print("\n ¡Hola " + usuarioNombre + "!\n")
            print("Tu correo electrónico registrado es: ")
            print(usuariosRegistrados[usuarioNombre]['correo'])
            return usuarioNombre  # Devuelve el nombre del usuario actual
        else:
            print("El pin proporcionado no corresponde con el usuario")
    # Si el usuario no existe en el diccionario:
    else:
        print("\n MENSAJE: El usuario no existe. Intente de nuevo o ingrese nuevo usuario\n")
    return None

# Segunda opción del software;
## Crear un nuevo usuario
def nuevoUsuario():
    global usuariosRegistrados
    nuevoUsuario = input("\n Ingrese el nombre de usuario: ")
    correo = input("Ingrese el correo electrónico: ")
    pin = input("Ingrese el pin: ")
    usuariosRegistrados[nuevoUsuario] = {'correo': correo, 'pin': int(pin)}
    habitacionesUsuarios[nuevoUsuario] = []  # Inicializa las habitaciones del nuevo usuario como una lista vacía
    print("Registro exitoso. Ahora puede iniciar sesión.")

# Opción para agregar una habitación
def agregarHabitacion(usuarioActual):
    global habitacionesUsuarios
    nombreHabitacion = input("\nIngrese el nombre de la habitación que desea agregar: ")
    if nombreHabitacion not in habitacionesUsuarios[usuarioActual]:
        habitacionesUsuarios[usuarioActual].append(nombreHabitacion)
        print("Habitación agregada correctamente.")
    else:
        print("La habitación ya existe.")

# Opción para mostrar todas las habitaciones del usuario
def mostrarHabitaciones(usuarioActual):
    global habitacionesUsuarios
    print("\nHabitaciones de", usuarioActual)
    if habitacionesUsuarios[usuarioActual]:
        for habitacion in habitacionesUsuarios[usuarioActual]:
            print("-", habitacion)
    else:
        print("No se han agregado habitaciones.")

while True: 
    print("\n Bienvenido a SmartHome.\n")
    print("¿Qué deseas hacer?")
    print("1. Ingresar con tu usuario")
    print("2. Agregar usuario")
    print("3. Salir")
    opcion = input("Por favor seleccione una opción: ")
    
    if opcion == "1":
        usuarioActual = usuarioExistente()
        if usuarioActual:
            while True:
                print("\n¿Qué deseas hacer,", usuarioActual + "?")
                print("1. Agregar una habitación")
                print("2. Mostrar todas las habitaciones")
                print("3. Cerrar sesión")
                otraOpcion = input("Por favor seleccione una opción: ")
                if otraOpcion == "1":
                    agregarHabitacion(usuarioActual)
                elif otraOpcion == "2":
                    mostrarHabitaciones(usuarioActual)
                elif otraOpcion == "3":
                    print("Sesión finalizada. ¡Hasta luego!")
                    break
                else:
                    print("Su selección no es compatible. Intente de nuevo")
    elif opcion == "2":
        nuevoUsuario()
    elif opcion == "3":
        print("\n Sesión finalizada. ¡Hasta luego!")
        break
    else:
        print("Su selección no es compatible. Intente de nuevo")
      

