import datetime

usuariosRegistrados = {}
habitacionesUsuarios = {}
dispositivosUsuarios = {}
cerradurasUsuarios = {}


# Funciones

def usuarioExistente(usuariosRegistrados):
    usuarioNombre = input("\nIntroduzca su nombre de usuario: ")
    if usuarioNombre in usuariosRegistrados.keys():       
        pin = input("Introduzca su pin: ")
        if usuariosRegistrados[usuarioNombre]['pin'] == int(pin):
            print("\n ¡Hola " + usuarioNombre + "!\n")
            print("Tu correo electrónico registrado es: ")
            print(usuariosRegistrados[usuarioNombre]['correo'])
            return usuarioNombre
        else:
            print("El pin proporcionado no corresponde con el usuario")
    else:
        print("\nMENSAJE: El usuario no existe. Intente de nuevo o ingrese nuevo usuario\n")

def nuevoUsuario(usuariosRegistrados, habitacionesUsuarios):
    nuevoUsuario = input("\nIngrese el nombre de usuario: ")
    correo = input("Ingrese el correo electrónico: ")
    pin = input("Ingrese el pin: ")
    usuariosRegistrados[nuevoUsuario] = {'correo': correo, 'pin': int(pin)}
    habitacionesUsuarios[nuevoUsuario] = []
    cerradurasUsuarios[nuevoUsuario] = []
    print("\nRegistro exitoso. Ahora puede iniciar sesión.")

def agregarHabitacion(habitacionesUsuarios, cerradurasUsuarios, usuarioActual):

    nombreHabitacion = input("\nIngrese el nombre de la habitación que desea agregar: ")
    
    if nombreHabitacion not in habitacionesUsuarios[usuarioActual]:
        habitacionesUsuarios[usuarioActual].append(nombreHabitacion)
        pin = input("Asigne un pin de 4 dígitos para la cerradura: ")
        while not (pin.isdigit() and len(pin) == 4):
            print("El pin debe ser un número de 4 dígitos.")
            pin = input("Asigne un pin de 4 dígitos para la cerradura: ")
        cerradura = crear_cerradura(nombreHabitacion + "_cerradura", "cerrado", pin)
        cerradurasUsuarios[usuarioActual].append(cerradura)
        print("Habitación agregada correctamente junto con su cerradura.")
    else:
        print("La habitación ya existe.")


def mostrarHabitaciones(habitacionesUsuarios, usuarioActual):
    print("\nHabitaciones de", usuarioActual)
    if habitacionesUsuarios[usuarioActual]:
        for habitacion in habitacionesUsuarios[usuarioActual]:
            print("-", habitacion)
    else:
        print("No se han agregado habitaciones.")

def agregarDispositivo(dispositivosUsuarios, habitacionesUsuarios, usuarioActual):
    if not habitacionesUsuarios.get(usuarioActual):
        print("\nAún no ha registrado ninguna habitación. Por favor, agregue una habitación primero.")
        return
    
    nombreHabitacion = input("\nIngrese el nombre de la habitación donde agregará el dispositivo: ")
    
    if nombreHabitacion in habitacionesUsuarios[usuarioActual]:
        nombreDispositivo = input("Ingrese el nombre del dispositivo: ")
        if usuarioActual not in dispositivosUsuarios:
            dispositivosUsuarios[usuarioActual] = {}

        if nombreHabitacion not in dispositivosUsuarios[usuarioActual]:
            dispositivosUsuarios[usuarioActual][nombreHabitacion] = []

        dispositivoExistente = False
        for dispositivo in dispositivosUsuarios[usuarioActual][nombreHabitacion]:
            if dispositivo['nombre'] == nombreDispositivo:
                print("Un dispositivo con ese nombre ya existe en la habitación. Por favor, ingrese otro nombre.")
                dispositivoExistente = True
                break
        
        if not dispositivoExistente:
            estado = input("¿El dispositivo está encendido? (si/no): ").lower()
            dispositivo = {'nombre': nombreDispositivo, 'estado': estado}

            configurar_horario = input("¿Desea configurar un horario de encendido y apagado? (si/no): ").lower()
            if configurar_horario == "si":
                hora_encendido = input("Ingrese la hora de encendido (formato 24h, ej: 00:00): ")
                hora_apagado = input("Ingrese la hora de apagado (formato 24h, ej: 22:00): ")
                dispositivo['horario'] = {'encendido': hora_encendido, 'apagado': hora_apagado}
            else:
                # Establece el horario predeterminado de 12:00 am a 10:00 pm
                dispositivo['horario'] = {'encendido': '00:00', 'apagado': '22:00'}

            dispositivosUsuarios[usuarioActual][nombreHabitacion].append(dispositivo)
            if configurar_horario == "si":
                print(f"Dispositivo agregado correctamente con el horario personalizado de encendido a las {hora_encendido} y apagado a las {hora_apagado}.")
            else:
                print("Dispositivo agregado correctamente con el horario predeterminado de encendido a las 12:00 am y apagado a las 10:00 pm.")
    else:
        print("La habitación especificada no existe.")





def mostrarDispositivosHabitacion(dispositivosUsuarios, habitacionesUsuarios, usuarioActual):
    if not habitacionesUsuarios.get(usuarioActual):
        print("\nAún no ha registrado ninguna habitación. Por favor, agregue una habitación primero.")
        return
    
    nombreHabitacion = input("\nIngrese el nombre de la habitación de los dispositivos que desea ver: ")
    
    if nombreHabitacion in habitacionesUsuarios[usuarioActual]:
        if nombreHabitacion in dispositivosUsuarios.get(usuarioActual, {}):
            dispositivos = dispositivosUsuarios[usuarioActual][nombreHabitacion]
            if dispositivos:
                print("\nDispositivos en", nombreHabitacion, ":")
                for dispositivo in dispositivos:
                    estado = "Encendido" if dispositivo['estado'] == "si" or dispositivo['estado'] == "encendido" else "Apagado"
                    print(f"- {dispositivo['nombre']}: {estado}", end='')
                    if estado == "Encendido":
                        print(f", Encendido desde: {dispositivo['fechaEncendido']}")
                    else:
                        print()
            else:
                print("No hay dispositivos en la habitación", nombreHabitacion)
        else:
            print("No hay dispositivos en la habitación", nombreHabitacion)
    else:
        print("La habitación especificada no existe.")


def modificarEstadoDispositivo(dispositivosUsuarios, habitacionesUsuarios, usuarioActual):
    if not habitacionesUsuarios.get(usuarioActual):
        print("\nAún no ha registrado ninguna habitación. Por favor, agregue una habitación primero.")
        return
    
    nombreHabitacion = input("\nIngrese el nombre de la habitación donde modificará el dispositivo: ")
    
    if nombreHabitacion in habitacionesUsuarios[usuarioActual]:
        if nombreHabitacion in dispositivosUsuarios.get(usuarioActual, {}):
            dispositivos = dispositivosUsuarios[usuarioActual][nombreHabitacion]
            if dispositivos:
                nombreDispositivo = input("\nIngrese el nombre del dispositivo que desea modificar: ")
                for dispositivo in dispositivos:
                    if dispositivo['nombre'] == nombreDispositivo:
                        nuevo_estado = input("Ingrese el nuevo estado del dispositivo (encendido/apagado): ").lower()
                        if nuevo_estado in ["encendido", "apagado"]:
                            dispositivo['estado'] = nuevo_estado
                            if nuevo_estado == "encendido":
                                dispositivo['fechaEncendido'] = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                            print("Estado del dispositivo modificado correctamente.")
                            return
                        else:
                            print("Estado no válido. Por favor, ingrese 'encendido' o 'apagado'.")
                            return
                print("No se encontró un dispositivo con ese nombre.")
            else:
                print("No hay dispositivos en la habitación", nombreHabitacion)
        else:
            print("No hay dispositivos en la habitación", nombreHabitacion)
    else:
        print("La habitación especificada no existe.")


# Funciones de cerraduras

def crear_cerradura(nombre, estado, pin):
    return {"nombre": nombre, "estado": estado, "pin": pin}

def cambiar_pin(cerradura):
    pin_actual = input("Ingrese el pin actual: ")
    if pin_actual == cerradura["pin"]:
        nuevo_pin = input("Ingrese el nuevo pin: ")
        if len(nuevo_pin) > 4:
            print("¡Error! El pin no puede tener más de 4 dígitos.")
            return
        cerradura["pin"] = nuevo_pin
        print("¡El pin ha sido cambiado con éxito!")
    else:
        print("¡Pin incorrecto! No se puede cambiar el pin.")
        

def abrir_cerradura(cerradura, pin):
    if pin == cerradura["pin"]:
        cerradura["estado"] = "abierto"
        print(f"La cerradura {cerradura['nombre']} ha sido abierta.")
    else:
        print("¡Pin incorrecto! No se puede abrir la cerradura.")

def cerrar_cerradura(cerradura, pin):
    if pin == cerradura["pin"]:
        cerradura["estado"] = "cerrado"
        print(f"La cerradura {cerradura['nombre']} ha sido cerrada.")
    else:
        print("¡Pin incorrecto! No se puede cerrar la cerradura.")

def opcionesCerradura(cerradura):
    while True:
        print(f"\nOperando la cerradura {cerradura['nombre']}:")
        print("1. Abrir cerradura")
        print("2. Cerrar cerradura")
        print("3. Cambiar pin")
        print("4. Regresar")

        accion = input("Seleccione una acción: ")

        if accion == '1':
            pin = input("Ingrese el pin: ")
            abrir_cerradura(cerradura, pin)
        elif accion == '2':
            pin = input("Ingrese el pin: ")
            cerrar_cerradura(cerradura, pin)
        elif accion == '3':
            cambiar_pin(cerradura)
        elif accion == '4':
            break
        else:
            print("¡Opción inválida! Inténtelo de nuevo.")

def menu_cerraduras(cerraduras, usuarioActual):
    while True:
        print("\n--- Menú de Cerraduras ---")
        for i, cerradura in enumerate(cerraduras[usuarioActual], start=1):
            print(f"{i}. {cerradura['nombre']}: {cerradura['estado']}")

        print("0. Salir")

        opcion = input("Seleccione una cerradura para cambiar su estado: ")

        if opcion == '0':
            print("\nVolviendo al menú del usuario...")
            break
        elif opcion.isdigit() and 0 < int(opcion) <= len(cerraduras):
            cerradura_seleccionada = cerraduras[usuarioActual][int(opcion) - 1]
            opcionesCerradura(cerradura_seleccionada)
        else:
            print("¡Opción inválida! Inténtelo de nuevo.")

def cambiarPinUsuario(usuariosRegistrados, usuarioActual):
    pin_actual = input("Ingrese su pin actual: ")
    if usuariosRegistrados[usuarioActual]['pin'] == int(pin_actual):
        nuevo_pin = input("Ingrese su nuevo pin: ")
        confirmar_pin = input("Confirme su nuevo pin: ")
        if nuevo_pin == confirmar_pin:
            usuariosRegistrados[usuarioActual]['pin'] = int(nuevo_pin)
            print("Pin cambiado con éxito.")
        else:
            print("Los pines no coinciden. Intente de nuevo.")
    else:
        print("Pin actual incorrecto. Intente de nuevo.")
    

def mostrarTodasCerraduras(habitacionesUsuarios, cerradurasUsuarios):
    hay_cerraduras = False
    for usuario, cerraduras in cerradurasUsuarios.items():
        if cerraduras:
            print(f"\nCerraduras de {usuario}:")
            for cerradura in cerraduras:
                print(f"- {cerradura['nombre']}: {cerradura['estado']}")
            hay_cerraduras = True

    if not hay_cerraduras:
        print("\nNo hay cerraduras creadas.")

            

# Principal

def menu_usuario(usuarioActual):
    opcionUsuario = "1"
    while opcionUsuario != "9":
        print("\nMENU DEL USUARIO")
        print("1. Agregar habitación.")
        print("2. Ver habitaciones registradas.")
        print("3. Agregar dispositivo.")
        print("4. Ver dispositivos de una habitación.")
        print("5. Modificar estado de un dispositivo.")
        print("6. Manejar cerraduras")
        print("7. Ver cerraduras creadas.")
        print("8. Cambiar pin de inicio de sesión")
        print("9. Salir")
        opcionUsuario = input("Por favor seleccione una opción: ")

        if opcionUsuario == "1":
            agregarHabitacion(habitacionesUsuarios, cerradurasUsuarios, usuarioActual)
        elif opcionUsuario == "2":
            mostrarHabitaciones(habitacionesUsuarios, usuarioActual)
        elif opcionUsuario == "3":
            agregarDispositivo(dispositivosUsuarios, habitacionesUsuarios, usuarioActual)
        elif opcionUsuario == "4":
            mostrarDispositivosHabitacion(dispositivosUsuarios, habitacionesUsuarios, usuarioActual)
        elif opcionUsuario == "5":
            modificarEstadoDispositivo(dispositivosUsuarios, habitacionesUsuarios, usuarioActual)
        elif opcionUsuario == "6":
            menu_cerraduras(cerradurasUsuarios, usuarioActual)
        elif opcionUsuario == "7":
            mostrarTodasCerraduras(habitacionesUsuarios, cerradurasUsuarios)
        elif opcionUsuario == "8":
            cambiarPinUsuario(usuariosRegistrados, usuarioActual)
        elif opcionUsuario == "9":
            print("\nVolviendo a menú principal...")
        else:
            print("\nSu selección no es compatible. Intente de nuevo")

def main():
    opcion = "1"
    while opcion != "3": 
        print("\n Bienvenido a SmartHome.\n")
        print("¿Qué deseas hacer?")
        print("1. Ingresar con tu usuario")
        print("2. Agregar usuario")
        print("3. Salir")
        opcion = input("Por favor seleccione una opción: ")
        
        if opcion == "1":
            usuarioActual = usuarioExistente(usuariosRegistrados)
            if usuarioActual:
                menu_usuario(usuarioActual)
        
        elif opcion == "2":
            nuevoUsuario(usuariosRegistrados, habitacionesUsuarios)
        
        elif opcion == "3":
            print("\nSesión finalizada. ¡Hasta luego!")
            break
        
        else:
            print("\nSu selección no es compatible. Intente de nuevo")


#Ejecucion
            
main()
